REPORT zluc_alv_code_review.

CLASS lcl_event_handler DEFINITION.
  PUBLIC SECTION.
    METHODS: handle_added_function FOR EVENT added_function OF cl_salv_events_table
      IMPORTING e_salv_function.
ENDCLASS.

DATA: lo_event_handler TYPE REF TO lcl_event_handler.

CREATE OBJECT lo_event_handler.

DATA: lo_code_review TYPE REF TO zcl_code_review,
      it_result      TYPE TABLE OF zty_code.

DATA: lo_alv              TYPE REF TO cl_salv_table,
      lex_message         TYPE REF TO cx_salv_msg,
      lo_layout_settings  TYPE REF TO cl_salv_layout,
      lo_layout_key       TYPE        salv_s_layout_key,
      lo_columns          TYPE REF TO cl_salv_columns_table,
      lo_column           TYPE REF TO cl_salv_column,
      lex_not_found       TYPE REF TO cx_salv_not_found,
      lo_functions        TYPE REF TO cl_salv_functions_list,
      lo_display_settings TYPE REF TO cl_salv_display_settings.

CREATE OBJECT lo_code_review.

SELECTION-SCREEN BEGIN OF BLOCK b1.
  PARAMETERS: p_prog TYPE znome_programa.
SELECTION-SCREEN END OF BLOCK b1.

SELECT obj_name
  FROM tadir
  INTO TABLE @DATA(lt_select)
  WHERE obj_name = @p_prog.

IF sy-subrc = 0.
  it_result = lo_code_review->verificar_fae( nome_programa = p_prog ).
ELSE.
  MESSAGE 'Programa não encontrado. Por favor, digite novamente.' TYPE 'I'.
  RETURN.
ENDIF.

IF it_result IS INITIAL.
  MESSAGE 'Esse programa não possui Select com For All Entries ou todos For All Entries estão sendo verificados pelo IF' TYPE 'I'.
  RETURN.
ENDIF.

TRY.
    CALL METHOD cl_salv_table=>factory
      IMPORTING
        r_salv_table = lo_alv
      CHANGING
        t_table      = it_result.

    lo_alv->set_screen_status(
      EXPORTING
        report = sy-repid
        pfstatus = 'STANDARD'
        set_functions = lo_alv->c_functions_all
    ).

    SET HANDLER lo_event_handler->handle_added_function FOR lo_alv->get_event( ).

*    DATA(lo_events) = lo_alv->get_event( ).
*    SET HANDLER lo_events->on_user_command FOR lo_events.

    lo_alv->display( ).

CATCH cx_salv_msg INTO DATA(lo_exception).
  MESSAGE lo_exception TYPE 'I'.
ENDTRY.

CLASS lcl_event_handler IMPLEMENTATION.
  METHOD handle_added_function.
    CASE e_salv_function.
      WHEN '&FIX'.
        lo_code_review->corrigir_fae( p_prog ).
      WHEN OTHERS.
        " Código para outras funções
    ENDCASE.
  ENDMETHOD.
ENDCLASS.

*CLASS lcl_event_handler DEFINITION.
*  PUBLIC SECTION.
*    METHODS: on_user_command FOR EVENT user_command OF cl_salv_events
*      IMPORTING e_salv_function.
*ENDCLASS.
*
*CLASS lcl_event_handler IMPLEMENTATION.
*  METHOD on_user_command.
*	  CASE e_salv_function.
*    	WHEN '&FIX'.
*        lo_code_review->corrigir_fae( p_prog ).
*    ENDCASE.
*  ENDMETHOD.
*ENDCLASS.
*
*DATA(lo_event_handler) = NEW lcl_event_handler( ).

*lo_alv->get_functions( )->set_all( abap_true ).
*lo_alv->get_display_settings( )->set_list_header( 'Selects com FAE sem verificação' ).
*lo_alv->get_display_settings( )->set_striped_pattern( abap_true ).
*  lo_alv->get_selections( )->set_selection_mode( if_salv_c_selection_mode=>row_column ).

*  lo_alv->get_sorts( )->add_sort( columnname = 'INDEX' sequence = if_salv_c_sort=>sort_up ).
*lo_alv->get_columns( )->set_optimize( abap_true ).